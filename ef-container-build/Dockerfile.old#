# FROM quay.io/ubyon/ubuntu20-small:latest
# FROM docker.io/openvino/ubuntu18_dev:latest
# FROM  docker.io/duruo850/ubuntu18.04-python3.6
# FROM  quay.io/centos7/php-73-centos7   # root issues ?!
FROM docker.io/openmicroscopy/omero-ssh-systemd
# FROM centos:7

MAINTAINER nisp

# RUN yum-get update && yum-get install -y --force-yes 

RUN yum update -y && yum upgrade -y && yum install -y java-11-openjdk-devel

RUN yum install -y git vim telnet lsof 

RUN yum clean all 

# Set the JAVA_HOME environment variable
ENV JAVA_HOME /usr/lib/jvm/java-11-openjdk

# install Java
#ADD jdk-8u202-linux-x64.tar.gz /opt/jdk-linux-x64
ADD enginframe-2021.0-r1657.jar /enginframe-2021.0-r1657.jar
ADD license.ef /tmp/license.ef

# fix missing file 
RUN touch /usr/bin/locale-check && chmod 755 /usr/bin/locale-check

# add users
RUN useradd -u 1001 efadmin # && mkdir /home/efadmin && chown efadmin /home/efadmin
RUN useradd -u 1002 efnobody # && mkdir /home/efnobody && chown efnobody /home/efnobody
# RUN useradd -u 1010 ruser # && mkdir /home/ruser && chown ruser /home/ruser

# RUN yum install -y psmisc initscripts

RUN echo "#\\n# local config \\n#" >> /root/.bashrc
RUN echo "alias l=\"ls -al\"" >> /root/.bashrc
#RUN echo "export JAVA_HOME=/opt/jdk-linux-x64/jdk1.8.0_202" >> /root/.bashrc
#RUN echo "export PATH=/opt/jdk-linux-x64/jdk1.8.0_202/bin:$PATH" >> /root/.bashrc

# Install EF
ADD efinstall.config /tmp/efinstall.config
# RUN /opt/jdk-linux-x64/jdk1.8.0_73/bin/java -jar enginframe-2015.1-r38427.jar --batch
# RUN /opt/jdk-linux-x64/jdk1.8.0_202/bin/java -jar /enginframe-2021.0-r1657.jar --batch
RUN cd /tmp && java -jar /enginframe-2021.0-r1657.jar --batch

# Configure EF to use DCV SM
ADD cluster.props /opt/nice/enginframe/conf/plugins/dcvsm/clusters.props
RUN chmod 600 /opt/nice/enginframe/conf/plugins/dcvsm/clusters.props && chown efnobody:efnobody /opt/nice/enginframe/conf/plugins/dcvsm/clusters.props
ADD grid.conf /opt/nice/enginframe/conf/plugins/grid/grid.conf

# add network translations
ADD nat.conf /opt/nice/enginframe/conf/plugins/interactive/nat.conf

ADD interactive_builtin_linux_desktop.xml /opt/nice/enginframe/data/plugins/vdi/services/published/interactive_builtin_linux_desktop.xml
ADD interactive_67b1146427784051af628d097a61a631.xml /opt/nice/enginframe/data/plugins/vdi/services/published/interactive_67b1146427784051af628d097a61a631.xml
ADD interactive_67b1146427784051af628d097a61a631.tgz /opt/nice/enginframe/data/plugins/vdi/services/catalog/
ADD interactive_builtin_windows_desktop.xml /opt/nice/enginframe/data/plugins/vdi/services/published/interactive_builtin_windows_desktop.xml

# Start EF
# RUN /opt/nice/enginframe/bin/enginframe start 
# RUN service enginframe start

# Network
# we are using host networking so no need to open ports 
# EXPOSE 8080
# EXPOSE 8553

ADD ef-setup.sh /setup.sh

CMD [ "/setup.sh", "nobash" ]

# VOLUME /opt/nice/enginframe

# RUN mkdir /home/ruser
# RUN chmod ruser /home/ruser

# VOLUME /home/ruser

# clean up
# EF needs Java;  RUN rm -rf /opt/jdk-linux-x64
